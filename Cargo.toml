[package]
name = "massive-graph"
version = "0.1.0"
edition = "2021"
authors = ["Jordan Rancie <jordan@econic.ai>"]
description = "High-performance real-time graph database for collaborative intelligence"
license = "MIT"
repository = "https://github.com/econic-ai/massive-graph"

[lib]
name = "massive_graph"
path = "src/lib.rs"

[[bin]]
name = "massive-graph"
path = "src/main.rs"

[dependencies]
# Core async runtime - tokio for performance
tokio = { version = "1.0", features = ["full"] }

# High-performance HTTP server
axum = "0.7"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace", "fs"] }

# Zero-copy serialization
rmp-serde = "1.1"  # MessagePack for efficient binary serialization
bincode = "1.3"    # Alternative binary format
bytes = "1.5"      # Zero-copy byte handling

# Standard serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
base64 = "0.22"

# High-performance data structures
dashmap = "5.5"        # Concurrent HashMap
crossbeam = "0.8"      # Lock-free data structures
parking_lot = "0.12"   # Fast mutex/rwlock implementations
flume = "0.11"         # High-performance channels

# Memory management
memmap2 = "0.9"        # Memory-mapped files
jemallocator = "0.5"   # Better memory allocator

# Networking
quinn = "0.10"         # QUIC/HTTP3 support for WebTransport
tungstenite = "0.21"   # WebSocket implementation
tokio-tungstenite = "0.21"

# Cryptography (for future phases)
ed25519-dalek = "2.0"
sha3 = "0.10"
blake3 = "1.5"

# Metrics and monitoring
prometheus = "0.13"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Configuration
config = "0.14"
clap = { version = "4.0", features = ["derive"] }

# Utilities
uuid = { version = "1.6", features = ["v4", "serde"] }
thiserror = "1.0"
anyhow = "1.0"
once_cell = "1.19"
num_cpus = "1.16"
toml = "0.8"
hex = "0.4"

# Testing
proptest = "1.4"       # Property-based testing
rand = "0.9.1"

[dev-dependencies]
tokio-test = "0.4"
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.8"

[profile.release]
# Optimize for performance
opt-level = 3
debug = false
lto = "fat"           # Link-time optimization
codegen-units = 1     # Single codegen unit for better optimization
panic = "abort"       # Smaller binary, faster execution

[profile.dev]
# Faster compilation in development
opt-level = 0
debug = true
incremental = true

[profile.bench]
# Benchmark-specific optimizations
opt-level = 3
debug = false
lto = "fat"

[[bench]]
name = "graph_operations"
harness = false

[[bench]]
name = "delta_sync"
harness = false
